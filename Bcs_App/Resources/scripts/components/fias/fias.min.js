(function (factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) { // jshint ignore:line
        // AMD. Register as an anonymous module.
        define(['jquery'], factory); // jshint ignore:line
    } else { // noinspection JSUnresolvedVariable
        if (typeof module === 'object' && module.exports) { // jshint ignore:line
            // Node/CommonJS
            // noinspection JSUnresolvedVariable
            module.exports = factory(require('jquery')); // jshint ignore:line
        } else {
            // Browser globals
            factory(window.jQuery);
        }
    }
}(function ($) {
    "use strict";

    var NAMESPACE, tHeader, tMain, handler, defaultLayoutTemplates, Fias, tClose, tfias, tsave;
    NAMESPACE = '.fias';

    handler = function ($el, event, callback, skipNS) {
        var ev = skipNS ? event : event.split(' ').join(NAMESPACE + ' ') + NAMESPACE;
        $el.off(ev).on(ev, callback);
    };

    tfias =
        '<div class="block">\n' +
        '    <div style="position: absolute; left: 20px;">\n' +
        '        <span class="btn btn-sm btn-material" data-fias="hand">ввести вручную</span>\n' +
        '    </div>\n' +
        '    <div style="position: absolute; right: 20px;">\n' +
        '        <span class="btn btn-sm btn-material" data-fias="close">закрыть</span>\n' +
        '    </div>\n' +
        '    <div class="hide" style="position: absolute; left: 20px;" data-fias="lang">\n' +
        '        <span class="btn btn-sm btn-material">RU</span>\n' +
        '        <span class="btn btn-sm">EN</span>\n' +
        '    </div>\n' +
        '    <h5 class="head-text" style="font-size: 22px; margin-top:0px;">Адрес</h5>\n' +
        '    <div class="textbox-group hide">\n' +
        '        <label class="place">Ранее указанный адрес</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <div class="span-text" data-fias="fullearly"></div>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group hide">\n' +
        '        <label class="place">Адрес целиком</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <textarea class="text-box single-line" data-fias="full" placeholder="Введите адрес вплоть до улицы" type="text" value=""></textarea>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '  <div data-fias="finder-form">\n' +
        '    <div style="display:inline-block;">\n' +
        '        <div class="textbox-group">\n' +
        '            <label class="place" for="Address_Index">Почтовый индекс</label>\n' +
        '            <div class="textbox-element">\n' +
        '                <input class="text-box single-line" data-fias="index" id="Address_Index" pattern="[0-9]{3}[0-9]{3}" type="text" value="">\n' +
        '            </div>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place" for="Address_AddressRegion">Регион</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-validator="true" data-validator-type="ru" id="Address_AddressRegion" type="text" value="">\n' +
        '            <select class="selectpicker" data-fias="region" data-live-search="true" data-validtator-change="text" id="Address_AddressRegion" tabindex="-98">\n' +
        '                <option value=""> </option>\n' +
        '                <option value="6d1ebb35-70c6-4129-bd55-da3969658f5d">обл Ленинградская</option>\n' +
        '                <option value="1c727518-c96a-4f34-9ae6-fd510da3be03">обл Мурманская</option>\n' +
        '                <option value="63ed1a35-4be6-4564-a1ec-0c51f7383314">г Байконур</option>\n' +
        '                <option value="f136159b-404a-4f1f-8d8d-d169e1374d5c">АО Чукотский</option>\n' +
        '                <option value="43909681-d6e1-432d-b61f-ddac393cb5da">край Приморский</option>\n' +
        '                <option value="27eb7c10-a234-44da-a59c-8b1f864966de">обл Челябинская</option>\n' +
        '                <option value="df3d7359-afa9-4aaa-8ff9-197e73906b1c">обл Самарская</option>\n' +
        '                <option value="f10763dc-63e3-48db-83e1-9c566fe3092b">обл Ростовская</option>\n' +
        '                <option value="b756fe6b-bbd3-44d5-9302-5bfcc740f46e">обл Воронежская</option>\n' +
        '                <option value="aea6280f-4648-460f-b8be-c2bc18923191">обл Сахалинская</option>\n' +
        '                <option value="89db3198-6803-4106-9463-cbf781eff0b8">АО Ненецкий</option>\n' +
        '                <option value="88cd27e2-6a8a-4421-9718-719a28a0a088">обл Нижегородская</option>\n' +
        '                <option value="963073ee-4dfc-48bd-9a70-d2dfc6bd1f31">обл Рязанская</option>\n' +
        '                <option value="b6ba5716-eb48-401b-8443-b197c9578734">край Забайкальский</option>\n' +
        '                <option value="1ac46b49-3209-4814-b7bf-a509ea1aecd9">обл Новосибирская</option>\n' +
        '                <option value="df594e0e-a935-4664-9d26-0bae13f904fe">обл Саратовская</option>\n' +
        '                <option value="15784a67-8cea-425b-834a-6afe0e3ed61c">обл Костромская</option>\n' +
        '                <option value="a9a71961-9363-44ba-91b5-ddf0463aebc2">обл Тамбовская</option>\n' +
        '                <option value="294277aa-e25d-428c-95ad-46719c4ddb44">обл Архангельская</option>\n' +
        '                <option value="4f8b1a21-e4bb-422f-9087-d3cbf4bebc14">край Пермский</option>\n' +
        '                <option value="8bcec9d6-05bc-4e53-b45c-ba0c6f3a5c44">обл Оренбургская</option>\n' +
        '                <option value="a84b2ef4-db03-474b-b552-6229e801ae9b">обл Ярославская</option>\n' +
        '                <option value="92b30014-4d52-4e2e-892d-928142b924bf">обл Свердловская</option>\n' +
        '                <option value="fee76045-fe22-43a4-ad58-ad99e903bd58">обл Ульяновская</option>\n' +
        '                <option value="9c05e812-8679-4710-b8cb-5e8bd43cdf48">обл Магаданская</option>\n' +
        '                <option value="ed36085a-b2f5-454f-b9a9-1c9a678ee618">обл Вологодская</option>\n' +
        '                <option value="393aeccb-89ef-4a7e-ae42-08d5cebc2e30">обл Кемеровская</option>\n' +
        '                <option value="878fc621-3708-46c7-a97f-5a13a4176b3e">Чувашия Чувашская Республика -</option>\n' +
        '                <option value="889b1f3a-98aa-40fc-9d3d-0f41192758ab">обл Томская</option>\n' +
        '                <option value="18133adf-90c2-438e-88c4-62c41656de70">обл Калужская</option>\n' +
        '                <option value="826fa834-3ee8-404f-bdbc-13a5221cfb6e">АО Ямало-Ненецкий</option>\n' +
        '                <option value="de67dc49-b9ba-48a3-a4cc-c2ebfeca6c5e">Респ Чеченская</option>\n' +
        '                <option value="29251dcf-00a1-4e34-98d4-5c47484a36d4">обл Московская</option>\n' +
        '                <option value="639efe9d-3fc8-4438-8e70-ec4f2321f2a7">обл Белгородская</option>\n' +
        '                <option value="d66e5325-3a25-4d29-ba86-4ca351d9704b">АО Ханты-Мансийский Автономный округ - Югра</option>\n' +
        '                <option value="1b507b09-48c9-434f-bf6f-65066211c73e">Аобл Еврейская</option>\n' +
        '                <option value="d00e1013-16bd-4c09-b3d5-3cb09fc54bd8">край Краснодарский</option>\n' +
        '                <option value="0bb7fa19-736d-49cf-ad0e-9774c4dae09b">Респ Дагестан</option>\n' +
        '                <option value="327a060b-878c-4fb4-8dc4-d5595871a3d8">край Ставропольский</option>\n' +
        '                <option value="8d3f1d35-f0f4-41b5-b5b7-e7cadf3e7bd7">Респ Хакасия</option>\n' +
        '                <option value="61723327-1c20-42fe-8dfa-402638d9b396">обл Тверская</option>\n' +
        '                <option value="83009239-25cb-4561-af8e-7ee111b1cb73">обл Астраханская</option>\n' +
        '                <option value="0824434f-4098-4467-af72-d4f702fed335">обл Ивановская</option>\n' +
        '                <option value="026bc56f-3731-48e9-8245-655331f596c0">Респ Тыва</option>\n' +
        '                <option value="52618b9c-bcbb-47e7-8957-95c63f0b17cc">Респ Удмуртская</option>\n' +
        '                <option value="f5807226-8be0-4ea8-91fc-39d053aec1e2">обл Брянская</option>\n' +
        '                <option value="90c7181e-724f-41b3-b6c6-bd3ec7ae3f30">обл Калининградская</option>\n' +
        '                <option value="c225d3db-1db6-4063-ace0-b3fe9ea3805f">Респ Саха /Якутия/</option>\n' +
        '                <option value="de459e9c-2933-4923-83d1-9c64cfd7a817">Респ Северная Осетия - Алания</option>\n' +
        '                <option value="0c089b04-099e-4e0e-955a-6bf1ce525f1a">Респ Татарстан</option>\n' +
        '                <option value="d8327a56-80de-4df2-815c-4f6ab1224c50">Респ Адыгея</option>\n' +
        '                <option value="e5a84b81-8ea1-49e3-b3c4-0528651be129">обл Новгородская</option>\n' +
        '                <option value="a84ebed3-153d-4ba9-8532-8bdf879e1f5a">Респ Бурятия</option>\n' +
        '                <option value="5c48611f-5de6-4771-9695-7e36a4e7529d">Респ Алтай</option>\n' +
        '                <option value="b2d8cd20-cabc-4deb-afad-f3c4b4d55821">Респ Ингушетия</option>\n' +
        '                <option value="1781f74e-be4a-4697-9c6b-493057c94818">Респ Кабардино-Балкарская</option>\n' +
        '                <option value="61b95807-388a-4cb1-9bee-889f7cf811c8">Респ Карачаево-Черкесская</option>\n' +
        '                <option value="491cde9d-9d76-4591-ab46-ea93c079e686">Респ Калмыкия</option>\n' +
        '                <option value="248d8071-06e1-425e-a1cf-d1ff4c4a14a8">Респ Карелия</option>\n' +
        '                <option value="c20180d9-ad9c-46d1-9eff-d60bc424592a">Респ Коми</option>\n' +
        '                <option value="de2cbfdf-9662-44a4-a4a4-8ad237ae4a3e">Респ Марий Эл</option>\n' +
        '                <option value="37a0c60a-9240-48b5-a87f-0d8c86cdb6e1">Респ Мордовия</option>\n' +
        '                <option value="54049357-326d-4b8f-b224-3c6dc25d6dd3">обл Тюменская</option>\n' +
        '                <option value="d02f30fc-83bf-4c0f-ac2b-5729a866a207">край Камчатский</option>\n' +
        '                <option value="6f2cbfd8-692a-4ee4-9b16-067210bde3fc">Респ Башкортостан</option>\n' +
        '                <option value="c2deb16a-0330-4f05-821f-1d09c93331e6">г Санкт-Петербург</option>\n' +
        '                <option value="05426864-466d-41a3-82c4-11e61cdc98ce">обл Омская</option>\n' +
        '                <option value="da051ec8-da2e-4a66-b542-473b8d221ab4">обл Волгоградская</option>\n' +
        '                <option value="b8837188-39ee-4ff9-bc91-fcc9ed451bb3">обл Владимирская</option>\n' +
        '                <option value="f6e148a1-c9d0-4141-a608-93e3bd95e6c4">обл Псковская</option>\n' +
        '                <option value="db9c4f8b-b706-40e2-b2b4-d31b98dcd3d1">край Красноярский</option>\n' +
        '                <option value="1490490e-49c5-421c-9572-5673ba5d80c8">обл Липецкая</option>\n' +
        '                <option value="0b940b96-103f-4248-850c-26b6c7296728">обл Кировская</option>\n' +
        '                <option value="0c5b2444-70a0-4932-980c-b4dc0d3f02b5">г Москва</option>\n' +
        '                <option value="d028ec4f-f6da-4843-ada6-b68b3e0efa3d">обл Тульская</option>\n' +
        '                <option value="4a3d970f-520e-46b9-b16c-50d4ca7535a8">обл Курганская</option>\n' +
        '                <option value="c99e7924-0428-4107-a302-4fd7c0cca3ff">обл Пензенская</option>\n' +
        '                <option value="7d468b39-1afa-41ec-8c4f-97a8603cb3d4">край Хабаровский</option>\n' +
        '                <option value="5e465691-de23-4c4e-9f46-f35a125b5970">обл Орловская</option>\n' +
        '                <option value="6fdecb78-893a-4e3f-a5ba-aa062459463b">г Севастополь</option>\n' +
        '                <option value="bd8e6511-e4b9-4841-90de-6bbc231a789e">Респ Крым</option>\n' +
        '                <option value="8276c6a1-1a86-4f0d-8920-aba34d4cc34a">край Алтайский</option>\n' +
        '                <option value="844a80d6-5e31-4017-b422-4d9c01e9942c">обл Амурская</option>\n' +
        '                <option value="e8502180-6d08-431b-83ea-c7038f0df905">обл Смоленская</option>\n' +
        '                <option value="6466c988-7ce3-45e5-8b97-90ae16cb1249">обл Иркутская</option>\n' +
        '                <option value="ee594d5e-30a9-40dc-b9f2-0add1be44ba1">обл Курская</option>\n' +
        '            </select>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place">Район</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-fias="area" placeholder="Введите название района" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place">Город</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-fias="city" placeholder="Введите название города" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place">Внутригородской район</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-fias="urban" placeholder="Введите название внутригородского района" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place">Населённый пункт</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-fias="settlement" placeholder="Введите название населённого пункта(деревня, посёлок, прочее)" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group">\n' +
        '        <label class="place">Улица</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="hide text-box single-line" data-fias="street" placeholder="Введите название улицы" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="textbox-group hide">\n' +
        '        <label class="place">Код фиас</label>\n' +
        '        <div class="textbox-element">\n' +
        '            <input class="text-box single-line" data-fias="fias" type="text" value="">\n' +
        '        </div>\n' +
        '    </div>\n' +
        '  </div>\n' +
        '    <div class="col-md-6" style="padding: 0px;">\n' +
        '        <div class="textbox-group">\n' +
        '            <label>Дом</label>\n' +
        '            <div class="textbox-element">\n' +
        '                <input class="text-box single-line" data-fias="house" type="text" value="">\n' +
        '            </div>\n' +
        '        </div>\n' +
        '        <div class="textbox-group">\n' +
        '            <label>Корпус</label>\n' +
        '            <div class="textbox-element">\n' +
        '                <input class="text-box single-line" data-fias="building" type="text" value="">\n' +
        '            </div>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '    <div class="col-md-6" style="padding: 0px;">\n' +
        '        <div class="textbox-group">\n' +
        '            <label>Строение</label>\n' +
        '            <div class="textbox-element">\n' +
        '                <input class="text-box single-line" data-fias="housing" type="text" value="">\n' +
        '            </div>\n' +
        '        </div>\n' +
        '        <div class="textbox-group">\n' +
        '            <label>Квартира</label>\n' +
        '            <div class="textbox-element">\n' +
        '                <input class="text-box single-line" data-fias="flat" type="text" value="">\n' +
        '            </div>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '</div>\n';

    tsave = 
        '<div style="width: 100%;display: inline-block;text-align: center;padding-top: 10px;">\n'+
        '	<button class="btn btn-material" data-fias="save" style="margin: auto;">Сохранить</button>\n' +
        '</div>\n';

    tMain =
        '<div class="textbox-group">\n' +
        '   <label class="place">Строка для поиска адреса</label>\n' +
        '   <div class="textbox-element">\n' +
        '       <select class="selectpicker fias-address-finder" data-fias="street" data-live-search="true" tabindex="-98" title="Введите текст"></select>\n' +
        '   </div>\n' +
        '</div>\n';

    tClose =
        '<div class="clear" data-fias="clear">\n' +
        '	<span class="glyphicon glyphicon-remove"></span>\n' +
        '</div>\n';

    defaultLayoutTemplates = {
        main: tMain
    };

    Fias = function (element, region, area, city, urban, settlement, street, guid) {
        var self = this;
        self.$element = $(element);
        self._init(region, area, city, urban, settlement, street, guid);
    }

    Fias.prototype = {
        constructor: Fias,
        _init: function (region, area, city, urban, settlement, street, guid, e) {
            var self = this, $el = self.$element, t;
            document.Fias = self;
            self.el = $el;
            $el.guid = guid;
            $el.data = {};
            $el.selectData = {};
            $el.loadParams = {};
            $el.loadParams.region = region;
            $el.loadParams.area = area;
            $el.loadParams.city = city;
            $el.loadParams.urban = urban;
            $el.loadParams.settlement = settlement;
            $el.loadParams.street = street;
            $el.loadParams.guid = guid;
            $el.state = 'code';
            //document.Address = self;
            //document.getAddress = self.serializeObject;

            $el.append(tfias);
            $el.find('.block').append(tsave);
            

            
            $el.form = $el.find('[data-fias="finder-form"]');
            $el.full = $el.find('[data-fias="full"]');

            $el.region = $el.find('[data-fias="region"]');
            $el.area = $el.find('[data-fias="area"]');
            $el.city = $el.find('[data-fias="city"]');
            $el.urban = $el.find('[data-fias="urban"]');
            $el.settlement = $el.find('[data-fias="settlement"]');
            $el.street = $el.find('[data-fias="street"]');
            $el.fias = $el.find('[data-fias="fias"]');
            $el.index = $el.find('[data-fias="index"]');

            $el.building = $el.find('[data-fias="building"]');
            $el.housing = $el.find('[data-fias="housing"]');
            $el.house = $el.find('[data-fias="house"]');
            $el.flat = $el.find('[data-fias="flat"]');

            $el.close = $el.find('[data-fias="close"]');
            $el.open = $('[data-fias="open"]');
            $el.save = $('[data-fias="save"]');
            $el.lang = 'RU';
            $el.language = $('[data-fias="lang"]');
            $el.rus = $('[data-fias="lang"] span:first');
            $el.eng = $('[data-fias="lang"] span:last');

            $el.rus.click(function () {
                if ($el.lang != 'RU') {
                    $el.lang = 'RU';
                    self.changelang();
                    $el.language.find('span').removeClass('btn-material');
                    $el.rus.addClass('btn-material');
                }
            })
            $el.eng.click(function () {
                if ($el.lang != 'EN') {
                    $el.lang = 'EN';
                    self.changelang();
                    $el.language.find('span').removeClass('btn-material');
                    $el.eng.addClass('btn-material');
                }
            })

            $el.early = $('[data-fias="fullearly"]');

            $el.area.after('<div class="span-text"></div>');
            $el.areaspan = $el.area.parent().find('.span-text');
            $el.city.after('<div class="span-text"></div>');
            $el.cityspan = $el.city.parent().find('.span-text');
            $el.urban.after('<div class="span-text"></div>');
            $el.urbanspan = $el.urban.parent().find('.span-text');
            $el.settlement.after('<div class="span-text"></div>');
            $el.settlementspan = $el.settlement.parent().find('.span-text');
            $el.street.after('<div class="span-text"></div>');            
            $el.streetspan = $el.street.parent().find('.span-text');

            $el.street.before(tClose);
            $el.settlement.before(tClose);
            $el.urban.before(tClose);
            $el.city.before(tClose);
            $el.area.before(tClose);

            $el.street.addClass('hide');
            $el.area.addClass('hide');
            $el.city.addClass('hide');
            $el.settlement.addClass('hide');
            $el.urban.addClass('hide');
            $el.save.click(function () {
                self.save();
                self.close();
                //getAddress(self.serializeObject());
                //$('body').css('overflow', 'initial');
                //$el.addClass('hide');
            })
            $el.fias.parent().parent().before(tMain);
            $el.stroke = $el.find('.fias-address-finder');
            $el.hand = $el.find('[data-fias="hand"]');
            $el.hand.click(function () {
                self.handmake();
            })
            $el.stroke.parent().find('.filter-option').addClass('hide');
            $el.stroke.parent().find('.filter-option').after('<span class="pull-left fias-full">Введите текст</span>');
            //$el.stroke.parent().addClass('hide');
            $el.close.click(function () {
                self.close();
            })
            $el.open.click(function () {
                $el.removeClass('hide');
            })

            $el.index.keyup(function (event) {
                if (event.keyCode == 13 && $(this).val().length == 6) {
                    self.el.loader();
                    $.ajax({
                        url: 'https://supersh.ru:1007/Fias/GetObjectFromIndex?text=' + $(this).val(),
                        success: function (data) {
                            if (data != null) {
                                $el.guid = data.f1.AOGUID;
                                $el.selectData = data;
                                $el.area.parent().parent().addClass('hide');
                                $el.city.parent().parent().addClass('hide');
                                $el.urban.parent().parent().addClass('hide');
                                $el.settlement.parent().parent().addClass('hide');
                                $el.street.parent().parent().addClass('hide');
                                $el.fias.val($el.guid);
                                self.openFinder();

                                $el.stroke.parent().find('ul').empty();
                                $el.stroke.empty();
                                $el.stroke.parent().parent().parent().removeClass('hide');
                                self.prefiasView();
                                self.fiasView($el.selectData.f5);
                                self.fiasView($el.selectData.f4);
                                self.fiasView($el.selectData.f3);
                                self.fiasView($el.selectData.f2);
                                self.fiasView($el.selectData.f1);
                                //$el.stroke.parent().find('.fias-full').text(self.fullAddress());
                            }
                            self.el.loader();
                        },
                        error: function () {
                            self.el.loader();
                        }
                    });
                }
            })
            
            $el.stroke
                .selectpicker({
                    liveSearch: true
                })
                .ajaxSelectPicker({
                    ajax: {
                        url: 'https://supersh.ru:1007/Fias/GetObjectFromFias',
                        data: function (args) {
                            var params = {
                                guid: $el.guid,
                                text: self.backtransliterate($el.stroke.parent().find('.bs-searchbox').children().val())
                            };
                            return params;
                        }
                    },
                    locale: {
                        statusInitialized: 'Начните вводить текст для поиска!',
                        emptyTitle: 'Введите текст',
                        errorText: 'Не удалось получить результаты.',
                        searchPlaceholder: 'Поиск...',
                        statusSearching: 'Обработка запроса...'
                    },
                    preprocessData: function (data) {
                        var items = [];
                        if (data) {
                            self.el.data = data;
                            for (var j = 0; j < data.length; j++) {
                                var single = data[j];
                                if (single.f1.LIVESTATUS) {
                                    var addr = "";
                                    if (single.f5 != null) {
                                        addr += single.f5.SHORTNAME + " " + single.f5.FORMALNAME + " ";
                                    }
                                    if (single.f4 != null) {
                                        addr += single.f4.SHORTNAME + " " + single.f4.FORMALNAME + " ";
                                    }
                                    if (single.f3 != null) {
                                        addr += single.f3.SHORTNAME + " " + single.f3.FORMALNAME + " ";
                                    }
                                    if (single.f2 != null) {
                                        addr += single.f2.SHORTNAME + " " + single.f2.FORMALNAME;
                                    }
                                    addr = self.transliterate(addr);
                                    items.push({
                                        'value': single.f1.AOGUID,
                                        'text': self.transliterate(single.f1.SHORTNAME + " " + single.f1.FORMALNAME),
                                        'disabled': false,
                                        data: {
                                            subtext: addr
                                        }
                                    });
                                }
                            }
                        }
                        return items;
                    },
                    preserveSelected: false
                });
            $el.stroke.on('hidden.bs.select', function (e) {
                if (this.value != "") {
                    for (var j = 0; j < $el.data.length; j++) {
                        if ($el.data[j].f1.AOGUID == this.value) {
                            $el.selectData = $el.data[j];
                            $el.guid = this.value;
                            break;
                        }
                    }
                    $el.area.parent().parent().addClass('hide');
                    $el.city.parent().parent().addClass('hide');
                    $el.urban.parent().parent().addClass('hide');
                    $el.settlement.parent().parent().addClass('hide');
                    $el.street.parent().parent().addClass('hide');
                    $el.fias.val($el.guid);

                    if ($el.selectData.count == 0) {
                        $el.stroke.parent().parent().parent().addClass('hide');
                    }
                    else {
                        $el.stroke.parent().parent().parent().removeClass('hide');
                        self.openFinder();
                    }

                    $el.stroke.parent().find('ul').empty();
                    $el.stroke.empty();

                    if ($el.selectData.f1.INDEX != '' && $el.selectData.f1.INDEX != null) $el.index.val($el.selectData.f1.INDEX);
                    self.prefiasView();
                    self.fiasView($el.selectData.f5);
                    self.fiasView($el.selectData.f4);
                    self.fiasView($el.selectData.f3);
                    self.fiasView($el.selectData.f2);
                    self.fiasView($el.selectData.f1);

                    $el.stroke.parent().find('.fias-full').text(self.fullAddress());
                }
            });
            $el.region.change(function (e) {
                if ($el.state == 'code') {
                    if (this.value != "000") {
                        $el.guid = this.value;
                        $el.area.parent().parent().addClass('hide');
                        $el.city.parent().parent().addClass('hide');
                        $el.urban.parent().parent().addClass('hide');
                        $el.settlement.parent().parent().addClass('hide');
                        $el.street.parent().parent().addClass('hide');
                        $el.stroke.parent().parent().parent().removeClass('hide');
                        $(this).parent().parent().find('input').first().val($(this.children[this.selectedIndex]).html());
                        $(this).parent().parent().parent().removeClass('alert-group');
                        self.openFinder();
                    }
                    else {
                        $el.guid = null;
                        $el.area.parent().parent().addClass('hide');
                        $el.city.parent().parent().addClass('hide');
                        $el.urban.parent().parent().addClass('hide');
                        $el.settlement.parent().parent().addClass('hide');
                        $el.street.parent().parent().addClass('hide');
                        $(this).parent().parent().find('input').first().val($(this.children[this.selectedIndex]).html());
                        $(this).parent().parent().parent().addClass('alert-group');
                        //$el.stroke.parent().parent().addClass('hide');
                    }
                }
            });
            $el.find('[data-fias]').parent().find('[data-fias="clear"]').click(function () {
                if ($el.state == 'code') {
                    $el.stroke.parent().parent().parent().removeClass('hide');
                    switch ($(this).parent().parent().find('input').attr('data-fias')) {
                        case "area":
                            $el.area.parent().parent().addClass('hide');
                            $el.area.val('');
                            $el.areaspan.text('');
                        case "city":
                            $el.city.parent().parent().addClass('hide');
                            $el.city.val('');
                            $el.cityspan.text('');
                        case "urban":
                            $el.urban.parent().parent().addClass('hide');
                            $el.urban.val('');
                            $el.urbanspan.text('');
                        case "settlement":
                            $el.settlement.parent().parent().addClass('hide');
                            $el.settlement.val('');
                            $el.settlementspan.text('');
                        case "street":
                            $el.street.parent().parent().addClass('hide');
                            $el.street.val('');
                            $el.streetspan.text('');
                    }

                    switch ($(this).parent().parent().find('input').attr('data-fias')) {
                        case "area":
                            if ($el.selectData.f1 != null) {
                                while ($el.selectData.f1.AOLEVEL != 1) {
                                    self.clearObject();
                                }
                            }
                            break;
                        case "city":
                            if ($el.selectData.f1 != null) {
                                while ($el.selectData.f1.AOLEVEL != 3 && $el.selectData.f1.AOLEVEL != 1) {
                                    self.clearObject();
                                }
                            }
                            break;
                        case "urban":
                            if ($el.selectData.f1 != null) {
                                while ($el.selectData.f1.AOLEVEL != 3 && $el.selectData.f1.AOLEVEL != 1 && $el.selectData.f1.AOLEVEL != 2) {
                                    self.clearObject();
                                }
                            }
                            break;
                        case "settlement":
                            if ($el.selectData.f1 != null) {
                                while ($el.selectData.f1.AOLEVEL != 3 && $el.selectData.f1.AOLEVEL != 1 && $el.selectData.f1.AOLEVEL != 2 && $el.selectData.f1.AOLEVEL != 4) {
                                    self.clearObject();
                                }
                            }
                            break;
                        case "street":
                            if ($el.selectData.f1 != null) {
                                while ($el.selectData.f1.AOLEVEL != 3 && $el.selectData.f1.AOLEVEL != 1 && $el.selectData.f1.AOLEVEL != 2 && $el.selectData.f1.AOLEVEL != 4 && $el.selectData.f1.AOLEVEL != 5 && $el.selectData.f1.AOLEVEL != 90) {
                                    self.clearObject();
                                }
                            }
                            break;
                    }

                    if ($el.selectData.f1 != null) {
                        $el.guid = $el.selectData.f1.AOGUID;
                    }

                    self.openFinder();
                    $el.stroke.val('').selectpicker('refresh');

                    //if ($el.selectData.f1.INDEX != '' && $el.selectData.f1.INDEX != null)
                    $el.index.val($el.selectData.f1.INDEX);
                    self.prefiasView();
                    self.fiasView($el.selectData.f1);
                    self.fiasView($el.selectData.f2);
                    self.fiasView($el.selectData.f3);
                    self.fiasView($el.selectData.f4);
                    self.fiasView($el.selectData.f5);
                } else {
                    switch ($(this).parent().parent().find('input').attr('data-fias')) {
                        case "area":
                            $el.area.val('');
                            $el.areaspan.text('');
                        case "city":
                            $el.city.val('');
                            $el.cityspan.text('');
                        case "urban":
                            $el.urban.val('');
                            $el.urbanspan.text('');
                        case "settlement":
                            $el.settlement.val('');
                            $el.settlementspan.text('');
                        case "street":
                            $el.street.val('');
                            $el.streetspan.text('');
                    }
                }
            });

            if (area == undefined || area == null || area == '') {
                $el.area.parent().parent().addClass('hide');
            }
            else {
                $el.areaspan.parent().parent().removeClass('hide');
                $el.areaspan.text(area);
            }
            if (city == undefined || city == null || city == '') {
                $el.city.parent().parent().addClass('hide');
            }
            else {
                $el.cityspan.parent().parent().removeClass('hide');
                $el.cityspan.text(city);
            }
            if (urban == undefined || urban == null || urban == '') {
                $el.urban.parent().parent().addClass('hide');
            }
            else {
                $el.urbanspan.parent().parent().removeClass('hide');
                $el.urbanspan.text(urban);
            }
            if (settlement == undefined || settlement == null || settlement == '') {
                $el.settlement.parent().parent().addClass('hide');
            }
            else {
                $el.settlementspan.parent().parent().removeClass('hide');
                $el.settlementspan.text(settlement);
            }
            if (street == undefined || street == null || street == '') {
                $el.street.parent().parent().addClass('hide');
            }
            else {
                $el.streetspan.parent().parent().removeClass('hide');
                $el.streetspan.text(street);
            }
        },
        handmake: function () {
            var self = this, $el = self.$element, t;
            if ($el.state == 'hand') {
                //$el.form.removeClass('hide');
                //$el.full.parent().parent().addClass('hide');

                self.clear();
                self.clearObject();
                $el.state = 'code';
                $el.hand.removeClass('material-submit-btn');
                $el.hand.text('внести в свободной форме');

                setTimeout(function () {
                    $('[data-id="Address_AddressRegion"]').click();
                }, 100);
            }
            else {
                //$el.form.addClass('hide');
                //$el.full.parent().parent().removeClass('hide');

                $el.street.parent().parent().removeClass('hide');
                $el.settlement.parent().parent().removeClass('hide');
                $el.urban.parent().parent().removeClass('hide');
                $el.city.parent().parent().removeClass('hide');
                $el.area.parent().parent().removeClass('hide');
                $el.region.parent().parent().removeClass('hide');

                $el.street.removeClass('hide');
                $el.settlement.removeClass('hide');
                $el.urban.removeClass('hide');
                $el.city.removeClass('hide');
                $el.area.removeClass('hide');
                $el.region.removeClass('hide');

                $el.streetspan.addClass('hide');
                $el.settlementspan.addClass('hide');
                $el.urbanspan.addClass('hide');
                $el.cityspan.addClass('hide');
                $el.areaspan.addClass('hide');
                $el.state = 'hand';
                $el.hand.addClass('material-submit-btn');
                $el.hand.text('внести через справочник');
                $el.stroke.parent().parent().parent().addClass('hide');
            }
        },
        preload: function () {
            var self = this, $el = self.$element, t;
            $el.state = 'code';
            //self.state = self.view.state;
            if (self.view.state != 'hand') {
                if (self.view.view.fiascode.value != "" && self.view.view.fiascode.value != null) {
                    //console.log('Построение по коду фиас');
                    $('#fias-modal .block').loader();
                    $.ajax({
                        method: 'POST',
                        url: 'https://supersh.ru:1007/Fias/GetObjectFromFiasCode?text=' + self.view.view.fiascode.value,
                        success: function (data) {
                            if (data != null) {
                                $el.guid = data.f1.AOGUID;
                                $el.selectData = data;
                                $el.area.parent().parent().addClass('hide');
                                $el.city.parent().parent().addClass('hide');
                                $el.urban.parent().parent().addClass('hide');
                                $el.settlement.parent().parent().addClass('hide');
                                $el.street.parent().parent().addClass('hide');
                                $el.fias.val($el.guid);
                                if (data.f1.INDEX != null && data.f1.INDEX != "") $el.index.val(data.f1.INDEX);
                                $el.stroke.parent().find('ul').empty();
                                $el.stroke.empty();
                                if (data.count != 0)
                                    self.openFinder();
                                else $el.stroke.parent().parent().parent().addClass('hide');

                                self.prefiasView();
                                self.fiasView($el.selectData.f5);
                                self.fiasView($el.selectData.f4);
                                self.fiasView($el.selectData.f3);
                                self.fiasView($el.selectData.f2);
                                self.fiasView($el.selectData.f1);
                            }
                            $('#fias-modal .block').loader();
                        },
                        error: function () {
                            $('#fias-modal .block').loader();
                        },
                        timeout: 5000
                    });

                    setTimeout(function () {
                        $('[data-id="Address_AddressRegion"]').click();
                    }, 100);
                }
            }
            else {
                self.handmake();
                $el.area.val(self.view.view.area.value);
                $el.city.val(self.view.view.city.value);
                $el.settlement.val(self.view.view.settlement.value);
                $el.street.val(self.view.view.street.value);
                $el.urban.val(self.view.view.urbanarea.value);
                
                self.el.region.find('option').each(function (i, item) {
                    if ($(item).text() == self.view.view.region.value) {
                        self.el.region.val($(item).attr('value'));
                        self.el.region.selectpicker('refresh');
                    }
                })
                var guid = self.el.region.find('options')
                $el.stroke.parent().parent().parent().addClass('hide');
                //$el.area.val(self.view.view.region.val());
                //console.log('Построение по наименованиям адресных объектов');
            }
            $el.index.val(self.view.view.index.value);
            self.el.house.val(self.view.view.house.value);
            self.el.housing.val(self.view.view.housing.value);
            self.el.building.val(self.view.view.building.value);
            self.el.flat.val(self.view.view.flat.value);
            if (self.view.full != '' && self.view.full != null && self.view.full != undefined) {
                $el.early.text(self.view.full);
                $el.early.parent().parent().removeClass('hide');
            }
        },
        changelang: function () {
            self = this;
            self.el.region.find('option').each(function (i, item) {
                if (self.el.lang == 'EN')
                    $(item).text(self.transliterate($(item).text()));
                else
                    $(item).text(self.backtransliterate($(item).text()));
            })

            self.el.region.parent().find('[role="combobox"] li').each(function (i, item) {
                var elem = $(item).find('.text');
                if (self.el.lang == 'EN')
                    elem.text(self.transliterate(elem.text()));
                else
                    elem.text(self.backtransliterate(elem.text()));
            })
            if (self.el.lang == 'EN') {
                self.el.areaspan.text(self.transliterate(self.el.areaspan.text()));
                self.el.cityspan.text(self.transliterate(self.el.cityspan.text()));
                self.el.urbanspan.text(self.transliterate(self.el.urbanspan.text()));
                self.el.settlementspan.text(self.transliterate(self.el.settlementspan.text()));
                self.el.streetspan.text(self.transliterate(self.el.streetspan.text()));

                self.el.region.parent().parent().parent().find('label.place').text("Region");
                self.el.area.parent().parent().find('label.place').text("Area");
                self.el.city.parent().parent().find('label.place').text("City");
                self.el.urban.parent().parent().find('label.place').text("Urban area");
                self.el.settlement.parent().parent().find('label.place').text("Settlement");
                self.el.street.parent().parent().find('label.place').text("Street");
                self.el.index.parent().parent().find('label.place').text("Postal code");
                self.el.stroke.parent().parent().find('label').first().text('Address search string');

                self.el.house.parent().parent().find('label').first().text('House');
                self.el.building.parent().parent().find('label').first().text('Building');
                self.el.housing.parent().parent().find('label').first().text('Housing');
                self.el.flat.parent().parent().find('label').first().text('Flat');

                self.el.save.text('Save');
                self.el.close.text('close');
                self.el.find('.head-text').text('Russian address');
            }
            else {
                self.el.areaspan.text(self.backtransliterate(self.el.areaspan.text()));
                self.el.cityspan.text(self.backtransliterate(self.el.cityspan.text()));
                self.el.urbanspan.text(self.backtransliterate(self.el.urbanspan.text()));
                self.el.settlementspan.text(self.backtransliterate(self.el.settlementspan.text()));
                self.el.streetspan.text(self.backtransliterate(self.el.streetspan.text()));
                self.el.close.text('закрыть');
                self.el.region.parent().parent().parent().find('label.place').text("Регион");
                self.el.area.parent().parent().find('label.place').text("Район");
                self.el.city.parent().parent().find('label.place').text("Город");
                self.el.urban.parent().parent().find('label.place').text("Внутригородской район");
                self.el.settlement.parent().parent().find('label.place').text("Населённый пункт");
                self.el.street.parent().parent().find('label.place').text("Улица");
                self.el.index.parent().parent().find('label.place').text("Почтовый индекс");
                self.el.stroke.parent().parent().find('label').first().text('Строка для поиска адреса');

                self.el.house.parent().parent().find('label').first().text('Дом');
                self.el.building.parent().parent().find('label').first().text('Строение');
                self.el.housing.parent().parent().find('label').first().text('Корпус');
                self.el.flat.parent().parent().find('label').first().text('Квартира');
                self.el.save.text('Сохранить');
                self.el.find('.head-text').text('Адрес');
            }
            self.el.find('.selectpicker').selectpicker('refresh');
        },
        transliterate: function (str) {
            self = this;
            if (self.el.lang == 'EN')
            str = str
                .replace(/Й/g, "Jj")
                .replace(/Щ/g, "Shh")
                .replace(/Х/g, "Kh")
                .replace(/Ё/g, "Jo")
                .replace(/Ъ/g, "\"")
                .replace(/Ь/g, "'")
                .replace(/Ж/g, "Zh")
                .replace(/Ч/g, "Ch")
                .replace(/Ш/g, "Sh")
                .replace(/Э/g, "Eh")
                .replace(/Ю/g, "Ju")
                .replace(/Я/g, "Ja")
                .replace(/А/g, "A")
                .replace(/Б/g, "B")
                .replace(/В/g, "V")
                .replace(/Г/g, "G")
                .replace(/Д/g, "D")
                .replace(/Е/g, "E")
                .replace(/З/g, "Z")
                .replace(/И/g, "I")
                .replace(/К/g, "K")
                .replace(/Л/g, "L")
                .replace(/М/g, "M")
                .replace(/Н/g, "N")
                .replace(/О/g, "O")
                .replace(/П/g, "P")
                .replace(/Р/g, "R")
                .replace(/С/g, "S")
                .replace(/Т/g, "T")
                .replace(/У/g, "U")
                .replace(/Ф/g, "F")
                .replace(/Ц/g, "C")
                .replace(/Ы/g, "Y")
                .replace(/й/g, "jj")
                .replace(/щ/g, "shh")
                .replace(/ъ/g, "\"")
                .replace(/ь/g, "'")
                .replace(/х/g, "kh")
                .replace(/ё/g, "jo")
                .replace(/ж/g, "zh")
                .replace(/ч/g, "ch")
                .replace(/ш/g, "sh")
                .replace(/э/g, "eh")
                .replace(/ю/g, "ju")
                .replace(/я/g, "ja")
                .replace(/а/g, "a")
                .replace(/б/g, "b")
                .replace(/в/g, "v")
                .replace(/г/g, "g")
                .replace(/д/g, "d")
                .replace(/е/g, "e")
                .replace(/з/g, "z")
                .replace(/и/g, "i")
                .replace(/к/g, "k")
                .replace(/л/g, "l")
                .replace(/м/g, "m")
                .replace(/н/g, "n")
                .replace(/о/g, "o")
                .replace(/п/g, "p")
                .replace(/р/g, "r")
                .replace(/с/g, "s")
                .replace(/т/g, "t")
                .replace(/у/g, "u")
                .replace(/ф/g, "f")
                .replace(/ц/g, "c")
                .replace(/ы/g, "y");
            return str;
        },
        backtransliterate: function (str) {
            self = this;
            str = str
                .replace(/Jj/g, "Й")
                .replace(/Shh/g, "Щ")
                .replace(/Kh/g, "Х")
                .replace(/Jo/g, "Ё")
                .replace(/Zh/g, "Ж")
                .replace(/Ch/g, "Ч")
                .replace(/Sh/g, "Ш")
                .replace(/Eh/g, "Э")
                .replace(/Ju/g, "Ю")
                .replace(/Ja/g, "Я")
                .replace(/A/g, "А")
                .replace(/B/g, "Б")
                .replace(/V/g, "В")
                .replace(/G/g, "Г")
                .replace(/D/g, "Д")
                .replace(/E/g, "Е")
                .replace(/Z/g, "З")
                .replace(/I/g, "И")
                .replace(/K/g, "К")
                .replace(/L/g, "Л")
                .replace(/M/g, "М")
                .replace(/N/g, "Н")
                .replace(/O/g, "О")
                .replace(/P/g, "П")
                .replace(/R/g, "Р")
                .replace(/S/g, "С")
                .replace(/T/g, "Т")
                .replace(/U/g, "У")
                .replace(/F/g, "Ф")
                .replace(/C/g, "Ц")
                .replace(/Y/g, "Ы")
                .replace(/jj/g, "й")
                .replace(/shh/g, "щ")
                .replace(/\"/g, "ъ")
                .replace(/'/g, "ь")
                .replace(/kh/g, "х")
                .replace(/jo/g, "ё")
                .replace(/zh/g, "ж")
                .replace(/ch/g, "ч")
                .replace(/sh/g, "ш")
                .replace(/eh/g, "э")
                .replace(/ju/g, "ю")
                .replace(/ja/g, "я")
                .replace(/a/g, "а")
                .replace(/b/g, "б")
                .replace(/v/g, "в")
                .replace(/g/g, "г")
                .replace(/d/g, "д")
                .replace(/e/g, "е")
                .replace(/z/g, "з")
                .replace(/i/g, "и")
                .replace(/k/g, "к")
                .replace(/l/g, "л")
                .replace(/m/g, "м")
                .replace(/n/g, "н")
                .replace(/o/g, "о")
                .replace(/p/g, "п")
                .replace(/r/g, "р")
                .replace(/s/g, "с")
                .replace(/t/g, "т")
                .replace(/u/g, "у")
                .replace(/f/g, "ф")
                .replace(/c/g, "ц")
                .replace(/y/g, "ы");
            return str;
        },
        openFinder: function () {
            var self = this;
            setTimeout(function () {
                if (!self.el.stroke.parent().hasClass('open')) { self.el.stroke.parent().find('button').trigger('click') }
            }, 100);
        },
        clearObject: function () {
            var self = this;
            self.el.selectData.f1 = null;
            self.el.selectData.f1 = self.el.selectData.f2;
            self.el.selectData.f2 = self.el.selectData.f3;
            self.el.selectData.f3 = self.el.selectData.f4;
            self.el.selectData.f4 = self.el.selectData.f5;
        },
        saveView: function (data) {
            var self = this;
            if (data != null) {
                switch (data.AOLEVEL) {
                    case 1:
                        $('[name="region"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    case 4:
                        $('[name="city"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 5:
                        $('[name="city"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 6:
                        $('[name="city"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 6:
                        $('[name="city"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 90:
                        $('[name="street"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 7:
                        $('[name="street"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    case 91:
                        $('[name="street"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                    default:
                        $('[name="street"]').val(data.FORMALNAME + " " + data.SHORTNAME);
                        break;
                }
            }
        },
        fullAddress: function () {
            var self = this;
            if (self.el.selectData != null) {
                var str = '';
                if (self.el.selectData.f5 != null) str += ' ' + self.el.selectData.f5.SHORTNAME + " " + self.el.selectData.f5.FORMALNAME + ',';
                if (self.el.selectData.f4 != null) str += ' ' + self.el.selectData.f4.SHORTNAME + " " + self.el.selectData.f4.FORMALNAME + ',';
                if (self.el.selectData.f3 != null) str += ' ' + self.el.selectData.f3.SHORTNAME + " " + self.el.selectData.f3.FORMALNAME + ',';
                if (self.el.selectData.f2 != null) str += ' ' + self.el.selectData.f2.SHORTNAME + " " + self.el.selectData.f2.FORMALNAME + ',';
                if (self.el.selectData.f1 != null) str += ' ' + self.el.selectData.f1.SHORTNAME + " " + self.el.selectData.f1.FORMALNAME + ',';

                if (self.el.house.val() != '') str += ' д. ' + self.el.house.val() + ',';
                if (self.el.flat.val() != '') str += ' кв. ' + self.el.flat.val() + ',';
                if (self.el.building.val() != '') str += ' стр. ' + self.el.building.val() + ',';
                if (self.el.housing.val() != '') str += ' к. ' + self.el.housing.val() + ',';
                if (str.length > 1) str = str.substring(0, str.length - 1);
                str = str.trim();
                return self.transliterate(str);
            }
            return '';
        },
        Address: function () {
            var self = this;
            if (self.el.selectData != null) {
                var str = '';
                if (self.el.selectData.f5 != null) str += ' ' + self.el.selectData.f5.SHORTNAME + " " + self.el.selectData.f5.FORMALNAME + ',';
                if (self.el.selectData.f4 != null) str += ' ' + self.el.selectData.f4.SHORTNAME + " " + self.el.selectData.f4.FORMALNAME + ',';
                if (self.el.selectData.f3 != null) str += ' ' + self.el.selectData.f3.SHORTNAME + " " + self.el.selectData.f3.FORMALNAME + ',';
                if (self.el.selectData.f2 != null) str += ' ' + self.el.selectData.f2.SHORTNAME + " " + self.el.selectData.f2.FORMALNAME + ',';
                if (self.el.selectData.f1 != null) str += ' ' + self.el.selectData.f1.SHORTNAME + " " + self.el.selectData.f1.FORMALNAME + ',';
                if (str.length > 1) str = str.substring(0, str.length - 1);
                str = str.trim();
                return self.transliterate(str);
            }
            return '';
        },
        prefiasView: function () {
            var self = this;
            self.el.area.val('');
            self.el.city.val('');
            self.el.urban.val('');
            self.el.settlement.val('');
            self.el.street.val('');
        },
        fiasView: function (data) {
            var self = this;
            if (data != null) {
                switch (data.AOLEVEL) {
                    case 1:
                        self.el.region.val(data.AOGUID);
                        self.el.region.selectpicker('refresh');
                        break;
                    case 2:
                        break;
                    case 3:
                        self.el.area.parent().parent().removeClass('hide');
                        self.el.area.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.areaspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 4:
                        self.el.city.parent().parent().removeClass('hide');
                        self.el.city.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.cityspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 5:
                        self.el.urban.parent().parent().removeClass('hide');
                        self.el.urban.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.urbanspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 65:
                        self.el.settlement.parent().parent().removeClass('hide');
                        self.el.settlement.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.settlementspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 6:
                        self.el.settlement.parent().parent().removeClass('hide');
                        self.el.settlement.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.settlementspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 90:
                        self.el.settlement.parent().parent().removeClass('hide');
                        self.el.settlement.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.settlementspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 7:
                        self.el.street.parent().parent().removeClass('hide');
                        self.el.street.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.streetspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    case 91:
                        self.el.street.parent().parent().removeClass('hide');
                        self.el.street.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.streetspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                    default:
                        self.el.street.parent().parent().removeClass('hide');
                        self.el.street.val(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        self.el.streetspan.text(self.transliterate(data.SHORTNAME + " " + data.FORMALNAME));
                        break;
                }
            }
        },
        destroy: function () {
            var self = this, $cont = self.$container;
            $cont.find('.file-drop-zone').off();
            self.$element.insertBefore($cont).off(NAMESPACE).removeData();
            $cont.off().remove();
            return self.$element;
        },
        open: function (view) {
            var self = this, $el = self.$element, t;
            self.view = view;
            self.view._full();
            self.clear();
            self.preload();
        },
        clear: function (view) {
            var self = this, $el = self.$element, t;
            self.clearObject();
            $el.areaspan.text('');
            $el.cityspan.text('');
            $el.urbanspan.text('');
            $el.settlementspan.text('');
            $el.streetspan.text('');
            $el.region.val('');
            $el.area.val('');
            $el.city.val('');
            $el.urban.val('');
            $el.settlement.val('');
            $el.street.val('');
            $el.fias.val('');
            $el.index.val('');
            $el.building.val('');
            $el.housing.val('');
            $el.house.val('');
            $el.flat.val('');

            $el.index.parent().parent().removeClass('hide');
            $el.region.parent().parent().parent().removeClass('hide');
            $el.stroke.parent().parent().parent().removeClass('hide');
            $el.full.parent().parent().addClass('hide');
            $el.full.val('');

            $el.area.parent().parent().addClass('hide');
            $el.city.parent().parent().addClass('hide');
            $el.urban.parent().parent().addClass('hide');
            $el.settlement.parent().parent().addClass('hide');
            $el.street.parent().parent().addClass('hide');

            $el.selectData = {};
            $el.selectData.f1 = undefined;
            $el.selectData.f2 = undefined;
            $el.selectData.f3 = undefined;
            $el.selectData.f4 = undefined;

            $el.guid = undefined;

            self.el.region.val('');
            self.el.region.selectpicker('refresh');
            $el.stroke.parent().find('.pull-left.fias-full').text('Введите текст');

            $el.stroke.val('').selectpicker('refresh');

            $el.stroke.parent().parent().parent().removeClass('hide');
            $el.early.text('');
            $el.early.parent().parent().addClass('hide');
        },
        save: function () {
            var self = this, $el = self.$element, t;
            self.view.address = self.serializeObject();
            self.view.state = $el.state;
            self.view.update();
            self.view._full();
            $el.early.text('');
            $el.early.parent().parent().addClass('hide');
        },
        close: function () {
            var self = this, $el = self.$element, t;
            self.view = null;
            $('#fias-modal').smodal('close');
        },
        serializeObject: function () {
            var self = $(this)[0];
            var resultData = {};
            resultData.region = self.el.region.find('option[value="' + self.el.region.val() + '"]').text();
            resultData.area = self.el.area.val();
            resultData.city = self.el.city.val();
            resultData.urbanarea = self.el.urban.val();
            resultData.settlement = self.el.settlement.val();
            resultData.street = self.el.street.val();
            resultData.postalcode = self.el.index.val();

            resultData.house = self.el.house.val();
            resultData.housing = self.el.housing.val();
            resultData.building = self.el.building.val();
            resultData.flat = self.el.flat.val();

            resultData.address = self.Address();
            resultData.fulladdress = self.fullAddress();
            
            resultData.state = self.$element.state;

            var obj = {};
            obj.f1 = self.el.selectData.f1;
            obj.f2 = self.el.selectData.f2;
            obj.f3 = self.el.selectData.f3;
            obj.f4 = self.el.selectData.f4;
            obj.f5 = self.el.selectData.f5;
            
            if (obj.f1 != null && obj.f1 != undefined) {
                var data = obj.f1;
                if (self.$element.state == 'code') resultData.fiascode = data.AOGUID; else resultData.fiascode = '';
                while (data != null) {
                    switch (data.AOLEVEL) {
                        case 1:
                            resultData.region = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 2:
                            break;
                        case 3:
                            resultData.area = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 4:
                            resultData.city = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 5:
                            resultData.urbanarea = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 65:
                            resultData.settlement = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 6:
                            resultData.settlement = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 90:
                            resultData.settlement = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 7:
                            resultData.street = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        case 91:
                            resultData.street = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                        default:
                            resultData.street = self.transliterate(data.SHORTNAME + " " + data.FORMALNAME);
                            break;
                    }
                    data = obj.f1;
                    obj.f1 = obj.f2;
                    obj.f2 = obj.f3;
                    obj.f3 = obj.f4;
                    obj.f4 = obj.f5;
                    obj.f5 = null;
                }
            }
            return resultData;
        }
    }

    $.fn.fias = function (region, area, city, urban, settlement, street, guid) {
        this.each(function () {
            var self = $(this), data = self.data('fias');
            self.find('').empty();
            data = new Fias(this, region, area, city, urban, settlement, street, guid);
            self.data('fias', data);

            $.fias = data;
            return this;
        });
    };

    $.fn.fias.Constructor = Fias;

    $.fn.fias.open = function (view) {
        var self = this, $el = self.$element, t;
        self.view = view;
    }

    $(document).ready(function () {
        if ($('#fias-modal').length == 0) {
            $('.body-content > .main-block').append('<div id="fias-modal" class="modal-main"><div class="modal-table-block"><div class="modal-element" data-fias="mainfias"></div></div></div>');
            $('[data-fias="mainfias"]').fias();
        }
    })
}));

function getAddress(data) {
    console.log(data);
}